version: '3.8'

services:
  # AI 진실성 탐지기 메인 애플리케이션
  ai-truth-detector:
    build: .
    container_name: ai-truth-detector
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=app.py
      - PYTHONPATH=/app
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ai-truth-network

  # Redis (캐싱 및 세션 저장)
  redis:
    image: redis:7-alpine
    container_name: ai-truth-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - ai-truth-network

  # PostgreSQL (데이터베이스)
  postgres:
    image: postgres:15-alpine
    container_name: ai-truth-postgres
    environment:
      POSTGRES_DB: ai_truth_db
      POSTGRES_USER: ai_truth_user
      POSTGRES_PASSWORD: ai_truth_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - ai-truth-network

  # Nginx (리버스 프록시 및 로드 밸런싱)
  nginx:
    image: nginx:alpine
    container_name: ai-truth-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - ai-truth-detector
    restart: unless-stopped
    networks:
      - ai-truth-network

  # 모니터링 (Prometheus)
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-truth-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - ai-truth-network

  # 모니터링 (Grafana)
  grafana:
    image: grafana/grafana:latest
    container_name: ai-truth-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - ai-truth-network

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  ai-truth-network:
    driver: bridge
